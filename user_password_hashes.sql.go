// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: user_password_hashes.sql

package main

import (
	"context"
)

const getPasswordHash = `-- name: GetPasswordHash :one
SELECT username, password_hash FROM user_password_hashes 
WHERE username = $1 LIMIT 1
`

func (q *Queries) GetPasswordHash(ctx context.Context, username string) (UserPasswordHash, error) {
	row := q.db.QueryRow(ctx, getPasswordHash, username)
	var i UserPasswordHash
	err := row.Scan(&i.Username, &i.PasswordHash)
	return i, err
}

const setPasswordHash = `-- name: SetPasswordHash :one
INSERT INTO user_password_hashes (username, password_hash)
VALUES ($1, $2)
RETURNING username, password_hash
`

type SetPasswordHashParams struct {
	Username     string
	PasswordHash string
}

func (q *Queries) SetPasswordHash(ctx context.Context, arg SetPasswordHashParams) (UserPasswordHash, error) {
	row := q.db.QueryRow(ctx, setPasswordHash, arg.Username, arg.PasswordHash)
	var i UserPasswordHash
	err := row.Scan(&i.Username, &i.PasswordHash)
	return i, err
}
